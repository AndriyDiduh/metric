import numpy as np
from metric.mapping import AffProp
from metric.space import Matrix

sample = np.array([
    450971566152, 137438953516, 519691042925, 472446402592,
    468151435361, 137438953573, 493921239145, 296352743456,
    442381631605, 472446402661, 137438953573, 472446402657,
    137438953572, 137438953545, 416611827816, 433791697014,
    493921239072, 468151435375, 498216206437, 450971566184,
    442381631598, 450971566112, 481036337261, 489626271855,
    416611827828, 498216206446, 498216206368, 137438953583,
    433791697012, 463856468076, 519691042848, 502511173743,
    137438953518, 463856468080, 416611827813, 433791697011,
    416611827744, 429496729700, 468151435296, 137438953593,
    459561500787, 481036337273, 249108103269, 146028888096,
    502511173733, 433791696999, 433791697006, 459561500718,
    463856468085, 459561500769, 197568495650, 292057776160,
    472446402671, 137438953588, 446676598899, 511101108335,
    498216206368, 450971566184, 137438953587, 433791697005,
    493921239155, 442381631585, 141733920869
])


def main():
    data = np.float_([
        [0, 0, 0, 0, 0],
        [1.74120000000000, 4.07812000000000, -0.0927036000000, 41.7888000000000, 41.7888000000000],
        [7.75309000000000, 16.2466000000000, 3.03956000000000, 186.074000000000, 186.074000000000],
        [2.85493000000000, 3.25380000000000, 2.50559000000000, 68.5184000000000, 68.5184000000000],
        [5.81414000000000, 8.14015000000000, 3.22950000000000, 139.539000000000, 139.539000000000],
        [2.57927000000000, 2.63399000000000, 2.46802000000000, 61.9026000000000, 61.9026000000000]
    ])
    # assignments, exemplars, counts = AffProp()(Matrix(data))
    # print('assignments', list(assignments))
    # print('exemplars', list(exemplars))
    # print('counts', list(counts))
    print(''.join(sample.view('<U1')))


main()
